image:
  node:latest

stages:
  - build
  - test
  - build_apk
  - deploy

variables:
    ANDROID_SDK_TOOLS: "4333796"

cache:
  paths:
  - node_modules/
  - app-release.apk

build:
  stage: build
  script:
    - npm install
    - echo "Build Successfull"

test:
  stage: test
  script:
    - npm test -- --forceExit
    - echo "Test Successfull"

build_apk:
  stage: build_apk
  image: openjdk:8-jdk
  artifacts:
    name: apk
    paths:
      - app-release.apk
  script:
        - apt-get update
        - curl -sL https://deb.nodesource.com/setup_10.x | bash
        - apt-get install -y nodejs
        - wget --quiet --output-document=/tmp/sdk-tools-linux.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
        - unzip /tmp/sdk-tools-linux.zip -d .android
        - export ANDROID_HOME=$PWD/.android
        - export PATH=$PATH:$PWD/.android/platform-tools/
        - ./deployment_scripts/fill_configs.sh config
        - cd android/app
        - ../../deployment_scripts/generate_signature.sh $SIGNATURE_PASSWORD
        - ../../deployment_scripts/fill_gradle_properties.sh $SIGNATURE_PASSWORD
        - "export VERSION_CODE=$(($VERSION_CODE + $CI_PIPELINE_IID)) && echo $VERSION_CODE"
        - cd ..
        - ../deployment_scripts/accept_licenses.sh
        - ./gradlew --stop
        - ./gradlew assembleRelease --stacktrace
        - cp app/build/outputs/apk/release/app-release.apk ..
        - echo "APK Build Successfull"

deploy:
  stage: deploy
  only:
      - master
  script:
    - node ./deployment_scripts/deploy_apk.js app-release.apk
    - echo "Deployment Successfull"
